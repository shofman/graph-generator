1) Should ensure that the boss key is not immediately available, nor is the key item
2) Create random dungeon that uses probabilities:
  a) 1 key item to unlock entries
  b) Higher preference given to locks and keys vs special locks
  c) 1/8 (one per dungeon world) chance of having a 'crystals' style lock in a dungeon
  d) 1/4 having an 'arrows' style lock in a dungeon
  Probabilities subject to change, depending on the results of the evaluator


3) Water temple - let for circular structures
4) Handle interleaving for rooms - fire temple and jabu jabu ocarina
  - Rooms that have a single key, but multiple switches located further down (e.g. somewhere nested within the )
5) Handle bugs with "level3WaterGate" not being locked
6) When generating a legit dungeon, figure out the averages of the available children, vs the selected amount (to get a sense of how many times we select all, some, or branch off completely. And also whether we typically are locking off keys or locks)
7) Make key item more random in nature (number of unlocks, etc)
8) // Investigate why this failed = 1545429503897.7168 for water temple2
9) Change up the calculation for keys - a key should be able to open any lock (the names are just for ensuring structure)

Dungeons should make for backtracking interesting (e.g. key item is needed, or there are one way paths)
Items should be visible sometimes, but not attainable. How to pull this off?